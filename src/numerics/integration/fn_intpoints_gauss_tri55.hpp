// auto generated with Python using the quadpy library

#ifndef BELFEM_FN_INTPOINTS_GAUSS_TRI55_HPP
#define BELFEM_FN_INTPOINTS_GAUSS_TRI55_HPP

#include "typedefs.hpp"
#include "cl_Vector.hpp"
#include "cl_Matrix.hpp"

namespace belfem
{
    namespace integration
    {
// ----------------------------------------------------------------------------

        /**
         * 16th order interpolation
         *
         * Hong Xiao, Zydrunas Gimbutas :
         * A numerical algorithm for the construction of efficient quadrature rules in two and higher dimensions
         * Computers & Mathematics with Applications, vol. 59, no. 2, pp. 663â€“676, 2010
         * https://doi.org/10.1016/j.camwa.2009.10.027
         */
        inline void
        gauss_tri55(
                Vector< real > & aWeights,
                Matrix< real > & aPoints )
        {
            aPoints.set_size( 2, 55 );

            aPoints( 0, 0 ) = 0.3333333333333333;
            aPoints( 1, 0 ) = 0.3333333333333333;

            aPoints( 0, 1 ) = 0.06667447224023837;
            aPoints( 1, 1 ) = 0.06667447224023837;

            aPoints( 0, 2 ) = 0.24132168070137838;
            aPoints( 1, 2 ) = 0.24132168070137838;

            aPoints( 0, 3 ) = 0.41279809595522365;
            aPoints( 1, 3 ) = 0.41279809595522365;

            aPoints( 0, 4 ) = 0.15006373658703515;
            aPoints( 1, 4 ) = 0.15006373658703515;

            aPoints( 0, 5 ) = 0.46954803099668496;
            aPoints( 1, 5 ) = 0.46954803099668496;

            aPoints( 0, 6 ) = 0.017041629405718517;
            aPoints( 1, 6 ) = 0.017041629405718517;

            aPoints( 0, 7 ) = 0.06667447224023837;
            aPoints( 1, 7 ) = 0.8666510555195233;

            aPoints( 0, 8 ) = 0.24132168070137838;
            aPoints( 1, 8 ) = 0.5173566385972432;

            aPoints( 0, 9 ) = 0.41279809595522365;
            aPoints( 1, 9 ) = 0.1744038080895527;

            aPoints( 0, 10 ) = 0.15006373658703515;
            aPoints( 1, 10 ) = 0.6998725268259297;

            aPoints( 0, 11 ) = 0.46954803099668496;
            aPoints( 1, 11 ) = 0.060903938006630076;

            aPoints( 0, 12 ) = 0.017041629405718517;
            aPoints( 1, 12 ) = 0.965916741188563;

            aPoints( 0, 13 ) = 0.8666510555195233;
            aPoints( 1, 13 ) = 0.06667447224023837;

            aPoints( 0, 14 ) = 0.5173566385972432;
            aPoints( 1, 14 ) = 0.24132168070137838;

            aPoints( 0, 15 ) = 0.1744038080895527;
            aPoints( 1, 15 ) = 0.41279809595522365;

            aPoints( 0, 16 ) = 0.6998725268259297;
            aPoints( 1, 16 ) = 0.15006373658703515;

            aPoints( 0, 17 ) = 0.060903938006630076;
            aPoints( 1, 17 ) = 0.46954803099668496;

            aPoints( 0, 18 ) = 0.965916741188563;
            aPoints( 1, 18 ) = 0.017041629405718517;

            aPoints( 0, 19 ) = 0.009664954403660254;
            aPoints( 1, 19 ) = 0.41376948582708517;

            aPoints( 0, 20 ) = 0.030305943355186365;
            aPoints( 1, 20 ) = 0.30417944822947973;

            aPoints( 0, 21 ) = 0.010812972776103751;
            aPoints( 1, 21 ) = 0.08960908902270585;

            aPoints( 0, 22 ) = 0.10665316053614844;
            aPoints( 1, 22 ) = 0.29661537240038294;

            aPoints( 0, 23 ) = 0.051354315344013114;
            aPoints( 1, 23 ) = 0.16976335515028973;

            aPoints( 0, 24 ) = 0.0036969427073556124;
            aPoints( 1, 24 ) = 0.21404877992584728;

            aPoints( 0, 25 ) = 0.5765655597692546;
            aPoints( 1, 25 ) = 0.009664954403660254;

            aPoints( 0, 26 ) = 0.6655146084153339;
            aPoints( 1, 26 ) = 0.030305943355186365;

            aPoints( 0, 27 ) = 0.8995779382011905;
            aPoints( 1, 27 ) = 0.010812972776103751;

            aPoints( 0, 28 ) = 0.5967314670634686;
            aPoints( 1, 28 ) = 0.10665316053614844;

            aPoints( 0, 29 ) = 0.7788823295056971;
            aPoints( 1, 29 ) = 0.051354315344013114;

            aPoints( 0, 30 ) = 0.7822542773667971;
            aPoints( 1, 30 ) = 0.0036969427073556124;

            aPoints( 0, 31 ) = 0.41376948582708517;
            aPoints( 1, 31 ) = 0.5765655597692546;

            aPoints( 0, 32 ) = 0.30417944822947973;
            aPoints( 1, 32 ) = 0.6655146084153339;

            aPoints( 0, 33 ) = 0.08960908902270585;
            aPoints( 1, 33 ) = 0.8995779382011905;

            aPoints( 0, 34 ) = 0.29661537240038294;
            aPoints( 1, 34 ) = 0.5967314670634686;

            aPoints( 0, 35 ) = 0.16976335515028973;
            aPoints( 1, 35 ) = 0.7788823295056971;

            aPoints( 0, 36 ) = 0.21404877992584728;
            aPoints( 1, 36 ) = 0.7822542773667971;

            aPoints( 0, 37 ) = 0.41376948582708517;
            aPoints( 1, 37 ) = 0.009664954403660254;

            aPoints( 0, 38 ) = 0.30417944822947973;
            aPoints( 1, 38 ) = 0.030305943355186365;

            aPoints( 0, 39 ) = 0.08960908902270585;
            aPoints( 1, 39 ) = 0.010812972776103751;

            aPoints( 0, 40 ) = 0.29661537240038294;
            aPoints( 1, 40 ) = 0.10665316053614844;

            aPoints( 0, 41 ) = 0.16976335515028973;
            aPoints( 1, 41 ) = 0.051354315344013114;

            aPoints( 0, 42 ) = 0.21404877992584728;
            aPoints( 1, 42 ) = 0.0036969427073556124;

            aPoints( 0, 43 ) = 0.5765655597692546;
            aPoints( 1, 43 ) = 0.41376948582708517;

            aPoints( 0, 44 ) = 0.6655146084153339;
            aPoints( 1, 44 ) = 0.30417944822947973;

            aPoints( 0, 45 ) = 0.8995779382011905;
            aPoints( 1, 45 ) = 0.08960908902270585;

            aPoints( 0, 46 ) = 0.5967314670634686;
            aPoints( 1, 46 ) = 0.29661537240038294;

            aPoints( 0, 47 ) = 0.7788823295056971;
            aPoints( 1, 47 ) = 0.16976335515028973;

            aPoints( 0, 48 ) = 0.7822542773667971;
            aPoints( 1, 48 ) = 0.21404877992584728;

            aPoints( 0, 49 ) = 0.009664954403660254;
            aPoints( 1, 49 ) = 0.5765655597692546;

            aPoints( 0, 50 ) = 0.030305943355186365;
            aPoints( 1, 50 ) = 0.6655146084153339;

            aPoints( 0, 51 ) = 0.010812972776103751;
            aPoints( 1, 51 ) = 0.8995779382011905;

            aPoints( 0, 52 ) = 0.10665316053614844;
            aPoints( 1, 52 ) = 0.5967314670634686;

            aPoints( 0, 53 ) = 0.051354315344013114;
            aPoints( 1, 53 ) = 0.7788823295056971;

            aPoints( 0, 54 ) = 0.0036969427073556124;
            aPoints( 1, 54 ) = 0.7822542773667971;

            aWeights.set_size( 55 );

            aWeights( 0 ) = 0.023113955157095672;
            aWeights( 1 ) = 0.006212712797780504;
            aWeights( 2 ) = 0.020592020534896276;
            aWeights( 3 ) = 0.020492609893407683;
            aWeights( 4 ) = 0.014391748351374455;
            aWeights( 5 ) = 0.013546834733855226;
            aWeights( 6 ) = 0.001894567619132111;
            aWeights( 7 ) = 0.006212712797780504;
            aWeights( 8 ) = 0.020592020534896276;
            aWeights( 9 ) = 0.020492609893407683;
            aWeights( 10 ) = 0.014391748351374455;
            aWeights( 11 ) = 0.013546834733855226;
            aWeights( 12 ) = 0.001894567619132111;
            aWeights( 13 ) = 0.006212712797780504;
            aWeights( 14 ) = 0.020592020534896276;
            aWeights( 15 ) = 0.020492609893407683;
            aWeights( 16 ) = 0.014391748351374455;
            aWeights( 17 ) = 0.013546834733855226;
            aWeights( 18 ) = 0.001894567619132111;
            aWeights( 19 ) = 0.004091105276611069;
            aWeights( 20 ) = 0.006991803562326784;
            aWeights( 21 ) = 0.0028759349852485795;
            aWeights( 22 ) = 0.015823030840991622;
            aWeights( 23 ) = 0.008826540523551642;
            aWeights( 24 ) = 0.0023073453198645673;
            aWeights( 25 ) = 0.004091105276611069;
            aWeights( 26 ) = 0.006991803562326784;
            aWeights( 27 ) = 0.0028759349852485795;
            aWeights( 28 ) = 0.015823030840991622;
            aWeights( 29 ) = 0.008826540523551642;
            aWeights( 30 ) = 0.0023073453198645673;
            aWeights( 31 ) = 0.004091105276611069;
            aWeights( 32 ) = 0.006991803562326784;
            aWeights( 33 ) = 0.0028759349852485795;
            aWeights( 34 ) = 0.015823030840991622;
            aWeights( 35 ) = 0.008826540523551642;
            aWeights( 36 ) = 0.0023073453198645673;
            aWeights( 37 ) = 0.004091105276611069;
            aWeights( 38 ) = 0.006991803562326784;
            aWeights( 39 ) = 0.0028759349852485795;
            aWeights( 40 ) = 0.015823030840991622;
            aWeights( 41 ) = 0.008826540523551642;
            aWeights( 42 ) = 0.0023073453198645673;
            aWeights( 43 ) = 0.004091105276611069;
            aWeights( 44 ) = 0.006991803562326784;
            aWeights( 45 ) = 0.0028759349852485795;
            aWeights( 46 ) = 0.015823030840991622;
            aWeights( 47 ) = 0.008826540523551642;
            aWeights( 48 ) = 0.0023073453198645673;
            aWeights( 49 ) = 0.004091105276611069;
            aWeights( 50 ) = 0.006991803562326784;
            aWeights( 51 ) = 0.0028759349852485795;
            aWeights( 52 ) = 0.015823030840991622;
            aWeights( 53 ) = 0.008826540523551642;
            aWeights( 54 ) = 0.0023073453198645673;
        }

// ----------------------------------------------------------------------------
    } /* namespace integration */
} /* end namespace belfem */

#endif  // BELFEM_FN_INTPOINTS_GAUSS_TRI55_HPP
