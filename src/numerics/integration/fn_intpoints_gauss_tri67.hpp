// auto generated with Python using the quadpy library

#ifndef BELFEM_FN_INTPOINTS_GAUSS_TRI67_HPP
#define BELFEM_FN_INTPOINTS_GAUSS_TRI67_HPP

#include "typedefs.hpp"
#include "cl_Vector.hpp"
#include "cl_Matrix.hpp"
#include "fn_sum.hpp"

namespace belfem
{
    namespace integration
    {
// ----------------------------------------------------------------------------

        /**
         * 18th order interpolation
         *
         * F.D. Witherden, P.E. Vincent :
         * On the identification of symmetric quadrature rules for finite element methods
         * Computers & Mathematics with Applications, vol. 69, no. 10, pp. 1232â€“1241, 2015
         * https://doi.org/10.1016/j.camwa.2015.03.017
         */
        inline void
        gauss_tri67(
                Vector< real > & aWeights,
                Matrix< real > & aPoints )
        {
            aPoints.set_size( 3, 67 );

            aPoints( 0, 0 ) = 1./3. ;
            aPoints( 1, 0 ) = 1./3. ;

            aPoints( 0, 1 ) = 0.03883025608868562;
            aPoints( 1, 1 ) = 0.03883025608868562;

            aPoints( 0, 2 ) = 0.48758030157486953;
            aPoints( 1, 2 ) = 0.48758030157486953;

            aPoints( 0, 3 ) = 0.0919477421216432;
            aPoints( 1, 3 ) = 0.0919477421216432;

            aPoints( 0, 4 ) = 0.46180950640644924;
            aPoints( 1, 4 ) = 0.46180950640644924;

            aPoints( 0, 5 ) = 0.39995562806757623;
            aPoints( 1, 5 ) = 0.39995562806757623;

            aPoints( 0, 6 ) = 0.24226470251427196;
            aPoints( 1, 6 ) = 0.24226470251427196;

            aPoints( 0, 7 ) = 0.03883025608868562;
            aPoints( 1, 7 ) = 0.9223394878226288;

            aPoints( 0, 8 ) = 0.48758030157486953;
            aPoints( 1, 8 ) = 0.02483939685026093;

            aPoints( 0, 9 ) = 0.0919477421216432;
            aPoints( 1, 9 ) = 0.8161045157567136;

            aPoints( 0, 10 ) = 0.46180950640644924;
            aPoints( 1, 10 ) = 0.07638098718710151;

            aPoints( 0, 11 ) = 0.39995562806757623;
            aPoints( 1, 11 ) = 0.20008874386484754;

            aPoints( 0, 12 ) = 0.24226470251427196;
            aPoints( 1, 12 ) = 0.5154705949714561;

            aPoints( 0, 13 ) = 0.9223394878226288;
            aPoints( 1, 13 ) = 0.03883025608868562;

            aPoints( 0, 14 ) = 0.02483939685026093;
            aPoints( 1, 14 ) = 0.48758030157486953;

            aPoints( 0, 15 ) = 0.8161045157567136;
            aPoints( 1, 15 ) = 0.0919477421216432;

            aPoints( 0, 16 ) = 0.07638098718710151;
            aPoints( 1, 16 ) = 0.46180950640644924;

            aPoints( 0, 17 ) = 0.20008874386484754;
            aPoints( 1, 17 ) = 0.39995562806757623;

            aPoints( 0, 18 ) = 0.5154705949714561;
            aPoints( 1, 18 ) = 0.24226470251427196;

            aPoints( 0, 19 ) = 0.0005483600420422841;
            aPoints( 1, 19 ) = 0.027090910995162032;

            aPoints( 0, 20 ) = 0.0038976110334733582;
            aPoints( 1, 20 ) = 0.3956834343322697;

            aPoints( 0, 21 ) = 0.005298335186609826;
            aPoints( 1, 21 ) = 0.23577218495819174;

            aPoints( 0, 22 ) = 0.013462016741444982;
            aPoints( 1, 22 ) = 0.10819579379103328;

            aPoints( 0, 23 ) = 0.045804915859860795;
            aPoints( 1, 23 ) = 0.183822707925464;

            aPoints( 0, 24 ) = 0.040260283469908065;
            aPoints( 1, 24 ) = 0.3197516245253773;

            aPoints( 0, 25 ) = 0.12269675737192753;
            aPoints( 1, 25 ) = 0.20634925743383792;

            aPoints( 0, 26 ) = 0.12058769516392465;
            aPoints( 1, 26 ) = 0.33349352944988075;

            aPoints( 0, 27 ) = 0.9723607289627957;
            aPoints( 1, 27 ) = 0.0005483600420422841;

            aPoints( 0, 28 ) = 0.6004189546342569;
            aPoints( 1, 28 ) = 0.0038976110334733582;

            aPoints( 0, 29 ) = 0.7589294798551984;
            aPoints( 1, 29 ) = 0.005298335186609826;

            aPoints( 0, 30 ) = 0.8783421894675217;
            aPoints( 1, 30 ) = 0.013462016741444982;

            aPoints( 0, 31 ) = 0.7703723762146752;
            aPoints( 1, 31 ) = 0.045804915859860795;

            aPoints( 0, 32 ) = 0.6399880920047146;
            aPoints( 1, 32 ) = 0.040260283469908065;

            aPoints( 0, 33 ) = 0.6709539851942345;
            aPoints( 1, 33 ) = 0.12269675737192753;

            aPoints( 0, 34 ) = 0.5459187753861946;
            aPoints( 1, 34 ) = 0.12058769516392465;

            aPoints( 0, 35 ) = 0.027090910995162032;
            aPoints( 1, 35 ) = 0.9723607289627957;

            aPoints( 0, 36 ) = 0.3956834343322697;
            aPoints( 1, 36 ) = 0.6004189546342569;

            aPoints( 0, 37 ) = 0.23577218495819174;
            aPoints( 1, 37 ) = 0.7589294798551984;

            aPoints( 0, 38 ) = 0.10819579379103328;
            aPoints( 1, 38 ) = 0.8783421894675217;

            aPoints( 0, 39 ) = 0.183822707925464;
            aPoints( 1, 39 ) = 0.7703723762146752;

            aPoints( 0, 40 ) = 0.3197516245253773;
            aPoints( 1, 40 ) = 0.6399880920047146;

            aPoints( 0, 41 ) = 0.20634925743383792;
            aPoints( 1, 41 ) = 0.6709539851942345;

            aPoints( 0, 42 ) = 0.33349352944988075;
            aPoints( 1, 42 ) = 0.5459187753861946;

            aPoints( 0, 43 ) = 0.027090910995162032;
            aPoints( 1, 43 ) = 0.0005483600420422841;

            aPoints( 0, 44 ) = 0.3956834343322697;
            aPoints( 1, 44 ) = 0.0038976110334733582;

            aPoints( 0, 45 ) = 0.23577218495819174;
            aPoints( 1, 45 ) = 0.005298335186609826;

            aPoints( 0, 46 ) = 0.10819579379103328;
            aPoints( 1, 46 ) = 0.013462016741444982;

            aPoints( 0, 47 ) = 0.183822707925464;
            aPoints( 1, 47 ) = 0.045804915859860795;

            aPoints( 0, 48 ) = 0.3197516245253773;
            aPoints( 1, 48 ) = 0.040260283469908065;

            aPoints( 0, 49 ) = 0.20634925743383792;
            aPoints( 1, 49 ) = 0.12269675737192753;

            aPoints( 0, 50 ) = 0.33349352944988075;
            aPoints( 1, 50 ) = 0.12058769516392465;

            aPoints( 0, 51 ) = 0.9723607289627957;
            aPoints( 1, 51 ) = 0.027090910995162032;

            aPoints( 0, 52 ) = 0.6004189546342569;
            aPoints( 1, 52 ) = 0.3956834343322697;

            aPoints( 0, 53 ) = 0.7589294798551984;
            aPoints( 1, 53 ) = 0.23577218495819174;

            aPoints( 0, 54 ) = 0.8783421894675217;
            aPoints( 1, 54 ) = 0.10819579379103328;

            aPoints( 0, 55 ) = 0.7703723762146752;
            aPoints( 1, 55 ) = 0.183822707925464;

            aPoints( 0, 56 ) = 0.6399880920047146;
            aPoints( 1, 56 ) = 0.3197516245253773;

            aPoints( 0, 57 ) = 0.6709539851942345;
            aPoints( 1, 57 ) = 0.20634925743383792;

            aPoints( 0, 58 ) = 0.5459187753861946;
            aPoints( 1, 58 ) = 0.33349352944988075;

            aPoints( 0, 59 ) = 0.0005483600420422841;
            aPoints( 1, 59 ) = 0.9723607289627957;

            aPoints( 0, 60 ) = 0.0038976110334733582;
            aPoints( 1, 60 ) = 0.6004189546342569;

            aPoints( 0, 61 ) = 0.005298335186609826;
            aPoints( 1, 61 ) = 0.7589294798551984;

            aPoints( 0, 62 ) = 0.013462016741444982;
            aPoints( 1, 62 ) = 0.8783421894675217;

            aPoints( 0, 63 ) = 0.045804915859860795;
            aPoints( 1, 63 ) = 0.7703723762146752;

            aPoints( 0, 64 ) = 0.040260283469908065;
            aPoints( 1, 64 ) = 0.6399880920047146;

            aPoints( 0, 65 ) = 0.12269675737192753;
            aPoints( 1, 65 ) = 0.6709539851942345;

            aPoints( 0, 66 ) = 0.12058769516392465;
            aPoints( 1, 66 ) = 0.5459187753861946;

            for( uint k=0; k<67; ++k )
            {
                aPoints( 2, k ) =  1.0
                                   - aPoints( 0, k )
                                   - aPoints( 1, k );
            }

            aWeights.set_size( 67 );

            aWeights( 0 ) = 0.018177867650713334;
            aWeights( 1 ) = 0.0035646630098594852;
            aWeights( 2 ) = 0.0060233238169998555;
            aWeights( 3 ) = 0.008279579976001624;
            aWeights( 4 ) = 0.009474585753389433;
            aWeights( 5 ) = 0.016652235016695067;
            aWeights( 6 ) = 0.01823754470447182;
            aWeights( 7 ) = 0.0035646630098594852;
            aWeights( 8 ) = 0.0060233238169998555;
            aWeights( 9 ) = 0.008279579976001624;
            aWeights( 10 ) = 0.009474585753389433;
            aWeights( 11 ) = 0.016652235016695067;
            aWeights( 12 ) = 0.01823754470447182;
            aWeights( 13 ) = 0.0035646630098594852;
            aWeights( 14 ) = 0.0060233238169998555;
            aWeights( 15 ) = 0.008279579976001624;
            aWeights( 16 ) = 0.009474585753389433;
            aWeights( 17 ) = 0.016652235016695067;
            aWeights( 18 ) = 0.01823754470447182;
            aWeights( 19 ) = 0.0006114740634805449;
            aWeights( 20 ) = 0.0022652672511285325;
            aWeights( 21 ) = 0.002505330437289861;
            aWeights( 22 ) = 0.003420055059803591;
            aWeights( 23 ) = 0.006879808117471103;
            aWeights( 24 ) = 0.008873744551010202;
            aWeights( 25 ) = 0.011890955450076415;
            aWeights( 26 ) = 0.01274108765591222;
            aWeights( 27 ) = 0.0006114740634805449;
            aWeights( 28 ) = 0.0022652672511285325;
            aWeights( 29 ) = 0.002505330437289861;
            aWeights( 30 ) = 0.003420055059803591;
            aWeights( 31 ) = 0.006879808117471103;
            aWeights( 32 ) = 0.008873744551010202;
            aWeights( 33 ) = 0.011890955450076415;
            aWeights( 34 ) = 0.01274108765591222;
            aWeights( 35 ) = 0.0006114740634805449;
            aWeights( 36 ) = 0.0022652672511285325;
            aWeights( 37 ) = 0.002505330437289861;
            aWeights( 38 ) = 0.003420055059803591;
            aWeights( 39 ) = 0.006879808117471103;
            aWeights( 40 ) = 0.008873744551010202;
            aWeights( 41 ) = 0.011890955450076415;
            aWeights( 42 ) = 0.01274108765591222;
            aWeights( 43 ) = 0.0006114740634805449;
            aWeights( 44 ) = 0.0022652672511285325;
            aWeights( 45 ) = 0.002505330437289861;
            aWeights( 46 ) = 0.003420055059803591;
            aWeights( 47 ) = 0.006879808117471103;
            aWeights( 48 ) = 0.008873744551010202;
            aWeights( 49 ) = 0.011890955450076415;
            aWeights( 50 ) = 0.01274108765591222;
            aWeights( 51 ) = 0.0006114740634805449;
            aWeights( 52 ) = 0.0022652672511285325;
            aWeights( 53 ) = 0.002505330437289861;
            aWeights( 54 ) = 0.003420055059803591;
            aWeights( 55 ) = 0.006879808117471103;
            aWeights( 56 ) = 0.008873744551010202;
            aWeights( 57 ) = 0.011890955450076415;
            aWeights( 58 ) = 0.01274108765591222;
            aWeights( 59 ) = 0.0006114740634805449;
            aWeights( 60 ) = 0.0022652672511285325;
            aWeights( 61 ) = 0.002505330437289861;
            aWeights( 62 ) = 0.003420055059803591;
            aWeights( 63 ) = 0.006879808117471103;
            aWeights( 64 ) = 0.008873744551010202;
            aWeights( 65 ) = 0.011890955450076415;
            aWeights( 66 ) = 0.01274108765591222;

            aWeights( 0 )  = 0.0;
            aWeights( 0 )  = 0.5 - sum( aWeights );
        }

// ----------------------------------------------------------------------------
    } /* namespace integration */
} /* end namespace belfem */

#endif  // BELFEM_FN_INTPOINTS_GAUSS_TRI67_HPP
